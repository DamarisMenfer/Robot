@startuml
skinparam monochrome true
start
:serverOk?;
while (err > 0)
:err = receive_message_from_monitor(header,data);
if (header) then (HEADER_MTS_COM_DMB)
if (data) then (OPEN_COM_DMB)
:openComRobot!;
endif
elseif (header) then (HEADER_MTS_DMB_ORDER)
if (data) then (DMB_START_WITHOUT_WD)
:startRobot!;
else (DMB_GO_FORWARD || DMB_GO_BACK
|| DMB_GO_LEFT || DMB_GO_RIGHT
|| DMB_STOP_MOVE)
:move = data;
endif
elseif (header) then (CAM)
if (data) then (CAM_COMPUTE_POSITION)
:position = true;
elseif (data) then (CAM_STOP_COMPUTE_POSITION)
:position = false;
elseif (data) then (CAM_OPEN)
:err = open_camera(&cam);
if (err) then (== 0)
:rt_task_start(th_sendImage);
endif
elseif (data) then (CAM_CLOSE)
:close_camera(&cam);
elseif (data) then (CAM_ASK_ARENA)
:err = get_image(&cam, &imgIn);
if (err) then (== 0)
:draw_arena(&imgIn, &imgOut, &arene);
:send_compressed_img(&imgOut);
:rt_task_suspend(&th_sendImage);
endif
elseif (data) then (CAM_ARENA_CONFIRM)
:arenaConfirmed = true;
:rt_task_resume(&th_sendImage);
elseif (data) then (CAM_ARENA_INFIRM)
:arenaConfirmed = false;
:rt_task_resume(&th_sendImage);
endif
endif
endwhile
stop
@enduml
